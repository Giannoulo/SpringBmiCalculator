# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
spring.datasource.username=postgres
spring.datasource.password=ubuntu

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

## ==============================
## --- DATA SOURCE
## ==============================
#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#
## Database credentials
#spring.datasource.username=postgres
#spring.datasource.password=ubuntu
#
## Keep database connection alive
#spring.datasource.tomcat.test-while-idle = true
#spring.datasource.tomcat.validation-query = SELECT 1
#
## ==============================
## --- JPA / Hibernate
## ==============================
#
## Hibernate ddl auto (create, create-drop, update): with "update" the database
## schema will be automatically updated accordingly to java entities found in
## the project
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect